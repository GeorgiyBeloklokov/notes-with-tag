{"version":3,"sources":["Components/Task.jsx","Components/HaashTag.jsx","Components/Post.js","Components/Form.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Task","props","listData","dats","map","item","editMode","className","text","onClick","activateEditMode","key","delPost","id","value","onChange","handleChange","onBlur","deactivateEditMode","autoFocus","placeholder","HashTag","listTag","note","isActive","delHashtag","Post","this","onKeyDown","handleKeyPress","handleSubmit","tag","noteChange","searchTag","Component","Form","e","setState","target","preventDefault","state","indexOfStevie","findIndex","toLowerCase","includes","unshift","splice","delTag","filter","currentData","Date","now","currentTags","match","tagCloud","savedTags","Set","myJson","newDats","json","JSON","stringify","filterTask","forEach","act","i","length","charAt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkCeA,EAhCF,SAACC,GACV,IACMC,EADOD,EAAME,KACGC,KAAI,SAAAC,GACtB,OACI,iCACMA,EAAKC,UACP,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,WAAf,SAA2BF,EAAKG,OAChC,8BACI,wBAAQC,QAAS,kBAAMR,EAAMS,iBAAiBL,EAAKG,KAAMH,EAAKM,MACtDJ,UAAU,aADlB,oBAIJ,8BACI,wBAAQE,QAAS,kBAAMR,EAAMW,QAAQP,EAAKM,MAAMJ,UAAU,UAA1D,oBAIPF,EAAKC,UACN,qBAAKC,UAAU,oBAAf,SACI,uBAAOM,GAAIR,EAAKM,IAAKG,MAAOb,EAAMa,MAAOC,SAAUd,EAAMe,aAClDC,OAAQ,kBAAMhB,EAAMiB,mBAAmBb,EAAKM,IAAKN,EAAKG,OACtDW,WAAW,EACXC,YAAa,uGAnBlBf,EAAKM,QAwBvB,OACI,8BAAMT,KCRCmB,EArBC,SAACpB,GACb,IAEMqB,EAFOrB,EAAMsB,KAEEnB,KAAI,SAACC,GACtB,IAAIE,EAAY,IAIhB,OAHIN,EAAMuB,WACNjB,EAAY,UAGZ,8BACI,sBAAKA,UAAW,OAAhB,UACI,qBAAKA,UAAWA,EAAhB,SAA4BF,IAC5B,wBAAQI,QAAS,kBAAMR,EAAMwB,WAAWpB,IAAOE,UAAU,SAAzD,+EAHGF,MAUnB,OAAO,8BAAMiB,KCiCFI,E,4JAjDX,WACI,OACI,sBAAKnB,UAAU,OAAf,UACI,uBAAMA,UAAU,WAAhB,UACN,0BAEIO,MAAOa,KAAK1B,MAAMa,MAClBC,SAAUY,KAAK1B,MAAMe,aACrBY,UAAWD,KAAK1B,MAAM4B,eACtBT,YAAY,sOAGN,wBAAQb,UAAU,OAAOE,QAASkB,KAAK1B,MAAM6B,aAA7C,uEAIJ,uBAAMvB,UAAU,YAAhB,UACI,uBACIa,YAAY,2HACZN,MAAOa,KAAK1B,MAAM8B,IAClBhB,SAAUY,KAAK1B,MAAM+B,aAEzB,wBAAQzB,UAAU,YAAYE,QAASkB,KAAK1B,MAAMgC,UAAlD,qDAIJ,sBAAK1B,UAAU,UAAf,UACI,cAAC,EAAD,CACIO,MAAOa,KAAK1B,MAAMa,MAClBE,aAAcW,KAAK1B,MAAMe,aACzBJ,QAASe,KAAK1B,MAAMW,QACpBF,iBAAkBiB,KAAK1B,MAAMS,iBAC7BQ,mBAAoBS,KAAK1B,MAAMiB,mBAC/Bf,KAAMwB,KAAK1B,MAAME,OAErB,qBAAKI,UAAU,gBAAf,SACI,cAAC,EAAD,CACIiB,SAAUG,KAAK1B,MAAMuB,SACrBrB,KAAMwB,KAAK1B,MAAME,KACjBoB,KAAMI,KAAK1B,MAAMsB,KACjBE,WAAYE,KAAK1B,MAAMwB,yB,GAzChCS,aC2JJC,E,kDA3JX,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IAiBV+B,WAAa,SAACI,GACV,EAAKC,SAAS,CACVN,IAAKK,EAAEE,OAAOxB,SApBH,EAwBnBmB,UAAY,SAACG,GACTA,EAAEG,iBACF,IAAIpC,EAAO,EAAKqC,MAAMrC,KAClBsC,EAAgBtC,EAAKuC,WAAU,SAAArC,GAAI,OAAIA,EAAKG,KAAKmC,cAAcC,SAAU,EAAKJ,MAAMT,QACvF5B,EAAK0C,QAAQ1C,EAAKsC,IACjBtC,EAAK2C,OAAOL,EAAgB,EAAG,GACjC,EAAKJ,SAAS,CACVlC,KAAMA,EACN4B,IAAK,MAhCM,EAoCnBN,WAAa,SAACsB,GACV,EAAKV,SAAS,CACVd,KAAM,EAAKiB,MAAMjB,KAAKyB,QAAO,SAACjB,GAAD,OAASA,IAAQgB,QAtCnC,EA0CnB/B,aAAe,SAACoB,GACZ,EAAKC,SAAS,CACVvB,MAAOsB,EAAEE,OAAOxB,MAChBmC,YAAa,CACTzC,KAAM4B,EAAEE,OAAOxB,MACfH,IAAKuC,KAAKC,MACV7C,UAAU,GAEd8C,YAAahB,EAAEE,OAAOxB,MAAMuC,MAAM,mBAAqB,MAlD5C,EAsDnBC,SAAW,SAACC,EAAWH,GACnB,OAAO,YAAI,IAAII,IAAJ,sBAAYD,GAAZ,YAA0BH,OAvDtB,EA0DnBtB,aAAe,SAACM,GAEZ,GADAA,EAAEG,iBACuB,KAArB,EAAKC,MAAM1B,MAAc,CACzB,IAAI2C,EAAS,CACTtD,KAAM,EAAKqC,MAAMrC,KACjBoB,KAAM,EAAKiB,MAAMjB,MAEfmC,EAAO,sBAAO,EAAKlB,MAAMrC,MAAlB,CAAwB,EAAKqC,MAAMS,cAChD,EAAKZ,SAAS,CACVsB,KAAMC,KAAKC,UAAUJ,GACrBtD,KAAMuD,EACNnC,KAAM,EAAK+B,SAAS,EAAKd,MAAMjB,KAAM,EAAKiB,MAAMY,aAChDA,YAAa,GACbtC,MAAO,OAvEA,EA4EnBF,QAAU,SAACD,GACP,IAAMmD,EAAa,EAAKtB,MAAMrC,KAAK6C,QAAO,SAAC3C,GAAD,OAAUA,EAAKM,MAAQA,KACjE,EAAK0B,SAAS,CACVlC,KAAM2D,KA/EK,EAmFnBpD,iBAAmB,SAACF,EAAMG,GACtB,IAAMR,EAAO,EAAKqC,MAAMrC,KACpBK,GACAL,EAAK4D,SAAQ,SAAC1D,GACNA,EAAKM,MAAQA,IACbN,EAAKG,KAAOA,EACZH,EAAKC,UAAYD,EAAKC,aAKlC,IADA,IAAI0D,EAAM,EACDC,EAAI,EAAGA,EAAIzD,EAAK0D,OAAQD,IACH,MAAtBzD,EAAKyD,GAAGE,OAAO,KACfH,GAAM,GAGd,EAAK3B,SAAS,CACVlC,KAAMA,EACNW,MAAON,EACPgB,SAAUwC,KAtGC,EA0GnB9C,mBAAqB,SAACP,EAAKH,GACvB,GAAI,EAAKgC,MAAM1B,MAAO,CAClB,IAAMX,EAAO,EAAKqC,MAAMrC,KACpBK,IACAL,EAAK4D,SAAQ,SAAC1D,GACNA,EAAKM,MAAQA,IACbN,EAAKC,UAAW,EAChBD,EAAKG,KAAO,EAAKgC,MAAM1B,UAG/B,EAAKuB,SAAS,CACVlC,KAAMA,EACNW,MAAO,GACPU,UAAU,OAvHP,EA6HnBK,eAAiB,SAACO,GACA,UAAVA,EAAEzB,KACF,EAAKmB,aAAaM,IA7HtB,EAAKI,MAAQ,CACT1B,MAAO,GACPiB,IAAK,GACL5B,KAAM,GACNoB,KAAM,GACN6B,YAAa,GACbO,KAAM,KACNnC,UAAU,EACVyB,YAAa,CACTzC,KAAM,GACNG,IAAK,GACLL,UAAU,IAbH,E,0CAmInB,WACI,OACI,8BACI,cAAC,EAAD,CACIkB,SAAUG,KAAKa,MAAMhB,SACrBV,MAAOa,KAAKa,MAAM1B,MAClBS,KAAMI,KAAK2B,SAAS3B,KAAKa,MAAMjB,KAAMI,KAAKa,MAAMY,aAChDrB,IAAKJ,KAAKa,MAAMT,IAChB5B,KAAMwB,KAAKa,MAAMrC,KACjB0B,eAAgBF,KAAKE,eACrBb,aAAcW,KAAKX,aACnBS,WAAYE,KAAKF,WACjBb,QAASe,KAAKf,QACdF,iBAAkBiB,KAAKjB,iBACvBQ,mBAAoBS,KAAKT,mBACzBY,aAAcH,KAAKG,aACnBG,UAAWN,KAAKM,UAChBD,WAAYL,KAAKK,mB,GArJlBE,aCUJkC,E,4JARX,WACI,OACI,qBAAK7D,UAAU,gBAAf,SACI,cAAC,EAAD,U,GAJE2B,aCQHmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.780cdc56.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\nconst Task = (props) => {\r\n    const dats = props.dats;\r\n    const listData = dats.map(item => {\r\n        return (\r\n            <div key={item.key}>\r\n                {!item.editMode &&\r\n                <div className='notes'>\r\n                    <div className='someNote'>{item.text}</div>\r\n                    <div>\r\n                        <button onClick={() => props.activateEditMode(item.text, item.key)}\r\n                                className='changeNote'>Edit\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => props.delPost(item.key)} className='delNote'>X</button>\r\n                    </div>\r\n                </div>}\r\n\r\n                {item.editMode &&\r\n                <div className=\"someText editMode\">\r\n                    <input id={item.key} value={props.value} onChange={props.handleChange}\r\n                           onBlur={() => props.deactivateEditMode(item.key, item.text)}\r\n                           autoFocus={true}\r\n                           placeholder={'Введите значение...'}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>{listData}</div>\r\n    )\r\n}\r\nexport default Task;","import React from \"react\";\r\n\r\nconst HashTag = (props) => {\r\n    const note = props.note;\r\n\r\n    const listTag = note.map((item) => {\r\n        let className = \" \";\r\n        if (props.isActive) {\r\n            className = \"active\";\r\n        }\r\n        return (\r\n            <div  key={item}>\r\n                <div className={\"tags\"}>\r\n                    <div className={className}>{item}</div>\r\n                    <button onClick={() => props.delHashtag(item)} className=\"delTag\">\r\n                        Удалить тэг\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n    return <div>{listTag}</div>\r\n};\r\nexport default HashTag;\r\n","import React, { Component } from \"react\";\r\nimport Task from \"./Task\";\r\nimport HashTag from \"./HaashTag\";\r\n\r\nclass Post extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Post\">\r\n                <form className=\"someText\">\r\n          <textarea\r\n\r\n              value={this.props.value}\r\n              onChange={this.props.handleChange}\r\n              onKeyDown={this.props.handleKeyPress}\r\n              placeholder=\"Введите текст/тег и нажмите Enter или Сохранить...\"\r\n          >\r\n          </textarea>\r\n                    <button className=\"save\" onClick={this.props.handleSubmit}>\r\n                        Сохранить\r\n                    </button>\r\n                </form>\r\n                <form className=\"searchTag\">\r\n                    <input\r\n                        placeholder=\"Искать заметку по тегу...\"\r\n                        value={this.props.tag}\r\n                        onChange={this.props.noteChange}\r\n                    />\r\n                    <button className=\"tagButton\" onClick={this.props.searchTag}>\r\n                        Искать\r\n                    </button>\r\n                </form>\r\n                <div className=\"listBox\">\r\n                    <Task\r\n                        value={this.props.value}\r\n                        handleChange={this.props.handleChange}\r\n                        delPost={this.props.delPost}\r\n                        activateEditMode={this.props.activateEditMode}\r\n                        deactivateEditMode={this.props.deactivateEditMode}\r\n                        dats={this.props.dats}\r\n                    />\r\n                    <div className=\"containerNote\">\r\n                        <HashTag\r\n                            isActive={this.props.isActive}\r\n                            dats={this.props.dats}\r\n                            note={this.props.note}\r\n                            delHashtag={this.props.delHashtag}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport Post from \"./Post\";\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\",\r\n            tag: \"\",\r\n            dats: [],\r\n            note: [],\r\n            currentTags: [],\r\n            json: null,\r\n            isActive: false,\r\n            currentData: {\r\n                text: \"\",\r\n                key: \"\",\r\n                editMode: false\r\n            }\r\n        };\r\n    }\r\n\r\n    noteChange = (e) => {\r\n        this.setState({\r\n            tag: e.target.value\r\n        });\r\n    };\r\n\r\n    searchTag = (e) => {\r\n        e.preventDefault();\r\n        let dats = this.state.dats;\r\n        let indexOfStevie = dats.findIndex(item => item.text.toLowerCase().includes (this.state.tag) );\r\n         dats.unshift(dats[indexOfStevie]);\r\n          dats.splice(indexOfStevie + 1, 1);\r\n        this.setState({\r\n            dats: dats,\r\n            tag: \"\"\r\n        });\r\n    };\r\n\r\n    delHashtag = (delTag) => {\r\n        this.setState({\r\n            note: this.state.note.filter((tag) => tag !== delTag)\r\n        });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value,\r\n            currentData: {\r\n                text: e.target.value,\r\n                key: Date.now(),\r\n                editMode: false\r\n            },\r\n            currentTags: e.target.value.match(/(#[a-z\\d-]+)/gi) || []\r\n        });\r\n    };\r\n\r\n    tagCloud = (savedTags, currentTags) => {\r\n        return [...new Set([...savedTags, ...currentTags])];\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.value !== \"\") {\r\n            let myJson = {\r\n                dats: this.state.dats,\r\n                note: this.state.note\r\n            };\r\n            const newDats = [...this.state.dats, this.state.currentData];\r\n            this.setState({\r\n                json: JSON.stringify(myJson),\r\n                dats: newDats,\r\n                note: this.tagCloud(this.state.note, this.state.currentTags),\r\n                currentTags: [],\r\n                value: \"\"\r\n            });\r\n        }\r\n    };\r\n\r\n    delPost = (key) => {\r\n        const filterTask = this.state.dats.filter((item) => item.key !== key);\r\n        this.setState({\r\n            dats: filterTask\r\n        });\r\n    };\r\n\r\n    activateEditMode = (text, key) => {\r\n        const dats = this.state.dats;\r\n        if (text) {\r\n            dats.forEach((item) => {\r\n                if (item.key === key) {\r\n                    item.text = text;\r\n                    item.editMode = !item.editMode;\r\n                }\r\n            });\r\n        }\r\n        let act = 0;\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text[i].charAt(0) === \"#\") {\r\n                act = true;\r\n            }\r\n        }\r\n        this.setState({\r\n            dats: dats,\r\n            value: text,\r\n            isActive: act\r\n        });\r\n    };\r\n\r\n    deactivateEditMode = (key, text) => {\r\n        if (this.state.value) {\r\n            const dats = this.state.dats;\r\n            if (text) {\r\n                dats.forEach((item) => {\r\n                    if (item.key === key) {\r\n                        item.editMode = false;\r\n                        item.text = this.state.value;\r\n                    }\r\n                });\r\n                this.setState({\r\n                    dats: dats,\r\n                    value: \"\",\r\n                    isActive: false\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.handleSubmit(e)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Post\r\n                    isActive={this.state.isActive}\r\n                    value={this.state.value}\r\n                    note={this.tagCloud(this.state.note, this.state.currentTags)}\r\n                    tag={this.state.tag}\r\n                    dats={this.state.dats}\r\n                    handleKeyPress={this.handleKeyPress}\r\n                    handleChange={this.handleChange}\r\n                    delHashtag={this.delHashtag}\r\n                    delPost={this.delPost}\r\n                    activateEditMode={this.activateEditMode}\r\n                    deactivateEditMode={this.deactivateEditMode}\r\n                    handleSubmit={this.handleSubmit}\r\n                    searchTag={this.searchTag}\r\n                    noteChange={this.noteChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Form from './Form';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container App\">\r\n                <Form/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}